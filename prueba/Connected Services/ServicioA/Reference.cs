//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace prueba.ServicioA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GestionErrores", Namespace="http://schemas.datacontract.org/2004/07/ServicioA")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(prueba.ServicioA.Comic))]
    public partial class GestionErrores : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodErField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesErField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodEr {
            get {
                return this.CodErField;
            }
            set {
                if ((object.ReferenceEquals(this.CodErField, value) != true)) {
                    this.CodErField = value;
                    this.RaisePropertyChanged("CodEr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DesEr {
            get {
                return this.DesErField;
            }
            set {
                if ((object.ReferenceEquals(this.DesErField, value) != true)) {
                    this.DesErField = value;
                    this.RaisePropertyChanged("DesEr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comic", Namespace="http://schemas.datacontract.org/2004/07/ServicioA")]
    [System.SerializableAttribute()]
    public partial class Comic : prueba.ServicioA.GestionErrores {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdComField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolCreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SincroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitComField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCom {
            get {
                return this.IdComField;
            }
            set {
                if ((object.ReferenceEquals(this.IdComField, value) != true)) {
                    this.IdComField = value;
                    this.RaisePropertyChanged("IdCom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCre {
            get {
                return this.IdCreField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCreField, value) != true)) {
                    this.IdCreField = value;
                    this.RaisePropertyChanged("IdCre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RolCre {
            get {
                return this.RolCreField;
            }
            set {
                if ((object.ReferenceEquals(this.RolCreField, value) != true)) {
                    this.RolCreField = value;
                    this.RaisePropertyChanged("RolCre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sincro {
            get {
                return this.SincroField;
            }
            set {
                if ((object.ReferenceEquals(this.SincroField, value) != true)) {
                    this.SincroField = value;
                    this.RaisePropertyChanged("Sincro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitCom {
            get {
                return this.TitComField;
            }
            set {
                if ((object.ReferenceEquals(this.TitComField, value) != true)) {
                    this.TitComField = value;
                    this.RaisePropertyChanged("TitCom");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioA.IServicioA")]
    public interface IServicioA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioA/ObtenerComic", ReplyAction="http://tempuri.org/IServicioA/ObtenerComicResponse")]
        prueba.ServicioA.Comic ObtenerComic(string IdPer, string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioA/ObtenerComic", ReplyAction="http://tempuri.org/IServicioA/ObtenerComicResponse")]
        System.Threading.Tasks.Task<prueba.ServicioA.Comic> ObtenerComicAsync(string IdPer, string filtro);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioAChannel : prueba.ServicioA.IServicioA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioAClient : System.ServiceModel.ClientBase<prueba.ServicioA.IServicioA>, prueba.ServicioA.IServicioA {
        
        public ServicioAClient() {
        }
        
        public ServicioAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public prueba.ServicioA.Comic ObtenerComic(string IdPer, string filtro) {
            return base.Channel.ObtenerComic(IdPer, filtro);
        }
        
        public System.Threading.Tasks.Task<prueba.ServicioA.Comic> ObtenerComicAsync(string IdPer, string filtro) {
            return base.Channel.ObtenerComicAsync(IdPer, filtro);
        }
    }
}
